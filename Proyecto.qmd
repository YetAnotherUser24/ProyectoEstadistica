---
title: "Estadisticas sobre los aeropuertos"
author: "Grupo 7, Sección 9"
date: "`r format(Sys.time(), '%d %B, %Y')`"
editor: visual
format: html
output:
  html_notebook:
    toc: yes
    toc_float:
      collapsed: no
      smooth_scroll: no
    number_sections: yes

  html_document:
    toc: yes
    df_print: paged
---

# **Alumnos del grupo:**

| Alumno                          | **Código**    | **Correo**                     | **Porcentaje de Trabajo** |
|--------------------|----------------|--------------------|-----------------|
| ***Samir Stefano Suarez Rios*** | **202210611** | **samir.suarez\@utec.edu.pe**  | **x%**                    |
| **Milton Esteban Robles Reyes** | **202210416** | **milton.robles\@utec.edu.pe** | **x%**                    |
| **Caballito Hurtado**           | **201610002** | **María.salinas\@utec.edu.pe** | **x%**                    |
| **Chriss Martin de Coldplay**   | **201610002** | **María.salinas\@utec.edu.pe** | **x%**                    |

# **Tema**

Análisis mensual de la relación entre número de pasajeros e ingresos totales por aeropuerto (2020-2022)

# **Objetivo**

Evaluar la influencia del número de pasajeros en los ingresos totales (\$) por mes y año en cada aeropuerto en el Perú.

## Objetivo Secundarios

-   Comparar los ingresos totales (\$) durante la pandemia y post pandemia en el Perú.
-   Comparar los ingresos totales (\$) de los rubros ( ) en los aeropuertos del Perú.
-   Determinar la relación de los Check In y los despegues en los aeropuertos del Perú.

## Tabla de variables

# Librerías

```{r echo=FALSE}
library(plyr)
library(dplyr)
library(readr)
rm(list=ls())
```

# Tablas

```{r echo=FALSE}
ITS <- read_csv("RecaudacionIngresosTotales.csv")
IRS<- read_csv("RecaudacionIngresosRegulados.csv")
TP <- read_csv("TraficoPasajeros.csv")
```

# Limpieza de datos

## Creando el dataframe

```{r echo=FALSE, eval=FALSE}
# MESES:
m <- c("Enero","Febrero","Marzo","Abril","Mayo","Junio","Julio","Agosto","Setiembre","Octubre","Noviembre","Diciembre")


# AEROPUERTOS:
v <- c("Andahuaylas","Arequipa","Atalaya","Ayacucho","Cajamarca","Chachapoyas","Chiclayo","Chimbote","Cusco","Huánuco","Huaraz-Anta","Ilo","Iquitos","Jaén","Jauja","Juanjui","Juliaca","Lima","Mazamari","Moquegua","Nazca","Pisco","Piura","Pucallpa","Puerto Maldonado","Rioja","Rodríguez de Mendoza","Tacna","Talara","Tarapoto","Tingo","María","Tocache","Trujillo","Tumbes","Yurimaguas")


# CREAMOS 3 DF CON LOS AÑOS (2020,2021,2022):
DF2020 <- data.frame(rep(c(2020), length(v)*length(m)), rep(m,length(v)),rep(v,length(m)))

DF2020 <- rename(DF2020, "Año"="rep.c.2020...length.v....length.m..", "Mes" = "rep.m..length.v..", "Aeropuerto"= "rep.v..length.m.." )
DF2020$Aeropuerto <- sort(DF2020$Aeropuerto)
arrange(DF2020, Aeropuerto)


DF2021 <- data.frame(rep(c(2021), length(v)*length(m)), rep(m,length(v)),rep(v,length(m)))

DF2021 <- rename(DF2021, "Año"="rep.c.2021...length.v....length.m..", "Mes" = "rep.m..length.v..", "Aeropuerto"= "rep.v..length.m.." )
DF2021$Aeropuerto <- sort(DF2021$Aeropuerto)
arrange(DF2021, Aeropuerto)


DF2022 <- data.frame(rep(c(2022), length(v)*length(m)), rep(m,length(v)),rep(v,length(m)))

DF2022 <- rename(DF2022, "Año"="rep.c.2022...length.v....length.m..", "Mes" = "rep.m..length.v..", "Aeropuerto"= "rep.v..length.m.." )
DF2022$Aeropuerto <- sort(DF2022$Aeropuerto)
arrange(DF2022, Aeropuerto)


# COMBINAMOS LOS 3DF EN UN DF COMPLETO:
DF <- merge(DF2020,DF2021, by = c("Año","Mes","Aeropuerto"), all = TRUE)
DF <- merge(DF,DF2022, by = c("Año","Mes","Aeropuerto"), all = TRUE)

```

```{r}
#table(ITS$"Rubro Ingreso")
```

```{r}
#table(IR$`Rubro Ingreso`)
```

## Creando el DataFrame a partir de la variable Ingresos Totales (IT)

```{r eval=TRUE}
ITS <- filter(ITS, Año %in% c("2020","2021","2022"))
ITS %>% group_by(Año,Mes,Aeropuerto,Infraestructura) %>% summarise(IT = sum(`Importe por Servicios`)) -> DF

```

```{r eval=FALSE}
DF$IT[is.na(DF$IT)] <- 0
```

## Uniendo la variable Ingresos Regulados (IR)

```{r}
IRS %>% group_by(Año,Mes,Aeropuerto) %>% summarise(IR = sum(`Importe por Servicios`)) -> IRegulados
DF <- merge(DF, IRegulados, by = c("Año","Mes","Aeropuerto"), all=TRUE)
```

```{r eval=FALSE}
DF$IR[is.na(DF$IR)] <- 0
```

## Uniendo la variable Numero de Pasajeros Internacionales (NPI)

```{r}
PI <- filter(TP, `Tipo de Pasajero` == "INTERNACIONAL")
PI <- filter(PI,Año %in% c(2020,2021,2022))
PI <- select(PI, -Periodo)
PI <- select(PI, -`Tipo de Pasajero`)
```

```{r}
DF <- merge(DF,PI, by = c("Año","Mes","Aeropuerto","Infraestructura"), all = TRUE)
DF <- rename(DF, "NPI" = "Nro Pasajeros")
```

```{r eval=TRUE}
DF$NPI[is.na(DF$NPI)] <- 0

#Reemplazo de N/A's por 0
```

## Uniendo la variable Numero de Pasajeros Nacionales (NPN)

```{r}
PN <- filter(TP, `Tipo de Pasajero` == "NACIONAL")
PN <- filter(PN,Año %in% c(2020,2021,2022))
PN <- select(PN, -Periodo)
PN <- select(PN, -`Tipo de Pasajero`)
```

```{r}
DF <- merge(DF,PN, by = c("Año","Mes","Aeropuerto","Infraestructura"), all=TRUE)
DF <- rename(DF, "NPN" = "Nro Pasajeros")
```

```{r eval=TRUE}
DF$NPN[is.na(DF$NPN)] <- 0

#Reemplazo de N/A's por 0
```

## Uniendo la variable Ingreso Rubro T U U A NACIONAL (TUUAN)

```{r}
TUUAN <- filter(ITS, `Rubro Ingreso` == "T U U A NACIONAL")
TUUAN <- filter(TUUAN,Año %in% c(2020,2021,2022))
TUUAN <- select(TUUAN, -'Tipo Ingreso')
TUUAN <- select(TUUAN, -'Rubro Ingreso')
TUUAN <- select(TUUAN, -'Periodo')
```

```{r}
#Creación de variable de verificación para reemplazo de N/A's
DF <- merge(DF, TUUAN, by = c("Año","Mes","Aeropuerto","Infraestructura"), all=TRUE)
DF <- rename(DF, "TUUAN_VER" = "Importe por Servicios")
```

```{r}
DF <- merge(DF, TUUAN, by = c("Año","Mes","Aeropuerto","Infraestructura"), all=TRUE)
DF <- rename(DF, "TUUAN" = "Importe por Servicios")
```

```{r eval=TRUE}
DF$TUUAN_VER[is.na(DF$TUUAN_VER)] <- 0
DF$TUUAN_VER[DF$TUUAN_VER != 0] <- "Si"
DF$TUUAN_VER[DF$TUUAN_VER == "0"] <- "No"
DF$TUUAN[is.na(DF$TUUAN)] <- 0
#Reemplazo de N/A's por 0
```

## Uniendo la variable Ingreso Rubro T U U A INTERNACIONAL (TUUAI)

```{r}
TUUAI <- filter(ITS, `Rubro Ingreso` == "T U U A INTERNACIONAL")
TUUAI <- filter(TUUAI,Año %in% c(2020,2021,2022))
TUUAI <- select(TUUAI, -'Tipo Ingreso')
TUUAI <- select(TUUAI, -'Rubro Ingreso')
TUUAI <- select(TUUAI, -'Periodo')
```

```{r}
DF <- merge(DF, TUUAI, by = c("Año","Mes","Aeropuerto","Infraestructura"), all=TRUE)
DF <- rename(DF, "TUUAI_VER" = "Importe por Servicios")#Creación de variable de verificación para reemplazo de N/A's
```

```{r}
DF <- merge(DF, TUUAI, by = c("Año","Mes","Aeropuerto","Infraestructura"), all=TRUE)
DF <- rename(DF, "TUUAI" = "Importe por Servicios")
```

```{r eval=TRUE}

DF$TUUAI_VER[is.na(DF$TUUAI_VER)] <- 0
DF$TUUAI_VER[DF$TUUAI_VER != 0] <- "Si"
DF$TUUAI_VER[DF$TUUAI_VER == "0"] <- "No"
DF$TUUAI[is.na(DF$TUUAI)] <- 0
#Reemplazo de N/A's por 0
```

## Uniendo la variable Ingreso Rubro ATERRIZAJE Y DESPEGUE (IRAD)

```{r}
IRAD <- filter(ITS, `Rubro Ingreso` == "ATERRIZAJE Y DESPEGUE")
IRAD <- filter(IRAD,Año %in% c(2020,2021,2022))
IRAD <- select(IRAD, -'Tipo Ingreso')
IRAD <- select(IRAD, -'Rubro Ingreso')
IRAD <- select(IRAD, -'Periodo')
```

```{r}

DF <- merge(DF, IRAD, by = c("Año","Mes","Aeropuerto","Infraestructura"), all=TRUE)
DF <- rename(DF, "IRAD_VER" = "Importe por Servicios")
#Creación de variable de verificación para reemplazo de N/A's
```

```{r}
DF <- merge(DF, IRAD, by = c("Año","Mes","Aeropuerto","Infraestructura"), all=TRUE)
DF <- rename(DF, "IRAD" = "Importe por Servicios")
```

```{r eval=TRUE}

DF$IRAD_VER[is.na(DF$IRAD_VER)] <- 0
DF$IRAD_VER[DF$IRAD_VER != 0] <- "Si"
DF$IRAD_VER[DF$IRAD_VER == "0"] <- "No"
DF$IRAD[is.na(DF$IRAD)] <- 0
#Reemplazo de N/A's por 0
```

## Uniendo la variable Ingreso Rubro ALQUILER AREAS DE MANTENIMIENTO (AADM)

```{r}
AADM <- filter(ITS, `Rubro Ingreso` == "ALQUILER AREAS DE MANTENIMIENTO")
AADM <- filter(AADM,Año %in% c(2020,2021,2022))
AADM <- select(AADM, -'Tipo Ingreso')
AADM <- select(AADM, -'Rubro Ingreso')
AADM <- select(AADM, -'Periodo')
```

```{r}

DF <- merge(DF, AADM, by = c("Año","Mes","Aeropuerto","Infraestructura"), all=TRUE)
DF <- rename(DF, "AADM_VER" = "Importe por Servicios")
#Creación de variable de verificación para reemplazo de N/A's
```

```{r}
DF <- merge(DF, AADM, by = c("Año","Mes","Aeropuerto","Infraestructura"), all=TRUE)
DF <- rename(DF, "AADM" = "Importe por Servicios")
```

```{r eval=TRUE}

DF$AADM_VER[is.na(DF$AADM_VER)] <- 0
DF$AADM_VER[DF$AADM_VER != 0] <- "Si"
DF$AADM_VER[DF$AADM_VER == "0"] <- "No"
DF$AADM[is.na(DF$AADM)] <- 0
#Reemplazo de N/A's por 0
```

## Uniendo la variable Ingreso ALQUILER DE ESPACIOS PUBLICITSARIOS (ADEP)

```{r}
ADEP <- filter(ITS, `Rubro Ingreso` == "ALQUILER DE ESPACIOS PUBLICITSARIOS")
ADEP <- filter(ADEP,Año %in% c(2020,2021,2022))
ADEP <- select(ADEP, -'Tipo Ingreso')
ADEP <- select(ADEP, -'Rubro Ingreso')
ADEP <- select(ADEP, -'Periodo')
```

```{r}

DF <- merge(DF, ADEP, by = c("Año","Mes","Aeropuerto","Infraestructura"), all=TRUE)
DF <- rename(DF, "ADEP_VER" = "Importe por Servicios")
#Creación de variable de verificación para reemplazo de N/A's
```

```{r}
DF <- merge(DF, ADEP, by = c("Año","Mes","Aeropuerto","Infraestructura"), all=TRUE)
DF <- rename(DF, "ADEP" = "Importe por Servicios")
```

```{r eval=TRUE}

DF$ADEP_VER[is.na(DF$ADEP_VER)] <- 0
DF$ADEP_VER[DF$ADEP_VER != 0] <- "Si"
DF$ADEP_VER[DF$ADEP_VER == "0"] <- "No"
DF$ADEP[is.na(DF$ADEP)] <- 0
#Reemplazo de N/A's por 0
```

## Uniendo la variable Ingreso ALQUILER LOCALES COMERCIALES (ALC)

```{r}
ALC <- filter(ITS, `Rubro Ingreso` == "ALQUILER LOCALES COMERCIALES")
ALC <- filter(ALC,Año %in% c(2020,2021,2022))
ALC <- select(ALC, -'Tipo Ingreso')
ALC <- select(ALC, -'Rubro Ingreso')
ALC <- select(ALC, -'Periodo')
```

```{r}

DF <- merge(DF, ALC, by = c("Año","Mes","Aeropuerto","Infraestructura"), all=TRUE)
DF <- rename(DF, "ALC_VER" = "Importe por Servicios")
#Creación de variable de verificación para reemplazo de N/A's 
```

```{r}
DF <- merge(DF, ALC, by = c("Año","Mes","Aeropuerto","Infraestructura"), all=TRUE)
DF <- rename(DF, "ALC" = "Importe por Servicios")
```

```{r eval=TRUE}

DF$ALC_VER[is.na(DF$ALC_VER)] <- 0
DF$ALC_VER[DF$ALC_VER != 0] <- "Si"
DF$ALC_VER[DF$ALC_VER == "0"] <- "No"
DF$ALC[is.na(DF$ALC)] <- 0
#Reemplazo de N/A's por 0
```

## Uniendo la variable Ingreso Rubro ALQUILER OFICINAS OPERACIONES AEROLÍNEAS (AOOA)

```{r}
AOOA <- filter(ITS, `Rubro Ingreso` == "ALQUILER OFICINAS OPERACIONES AEROLÍNEAS")
AOOA <- filter(AOOA,Año %in% c(2020,2021,2022))
AOOA <- select(AOOA, -'Tipo Ingreso')
AOOA <- select(AOOA, -'Rubro Ingreso')
AOOA <- select(AOOA, -'Periodo')
```

```{r}

DF <- merge(DF, AOOA, by = c("Año","Mes","Aeropuerto","Infraestructura"), all=TRUE)
DF <- rename(DF, "AOOA_VER" = "Importe por Servicios")
#Creación de variable de verificación para reemplazo de N/A's 
```

```{r}
DF <- merge(DF, AOOA, by = c("Año","Mes","Aeropuerto","Infraestructura"), all=TRUE)
DF <- rename(DF, "AOOA" = "Importe por Servicios")
```

```{r eval=TRUE}
DF$AOOA_VER[is.na(DF$AOOA_VER)] <- 0
DF$AOOA_VER[DF$AOOA_VER != 0] <- "Si"
DF$AOOA_VER[DF$AOOA_VER == "0"] <- "No"
DF$AOOA[is.na(DF$AOOA)] <- 0
```

## Uniendo la variable Ingreso Rubro ALQUILERES DE ALMACEN/HANGAR (ADAH)

```{r}
ADAH <- filter(ITS, `Rubro Ingreso` == "ALQUILERES DE ALMACEN/HANGAR")
ADAH <- filter(ADAH,Año %in% c(2020,2021,2022))
ADAH <- select(ADAH, -'Tipo Ingreso')
ADAH <- select(ADAH, -'Rubro Ingreso')
ADAH <- select(ADAH, -'Periodo')
```

```{r}

DF <- merge(DF, ADAH, by = c("Año","Mes","Aeropuerto","Infraestructura"), all=TRUE)
DF <- rename(DF, "ADAH_VER" = "Importe por Servicios")
#Creación de variable de verificación para reemplazo de N/A's 
```

```{r}
DF <- merge(DF, ADAH, by = c("Año","Mes","Aeropuerto","Infraestructura"), all=TRUE)
DF <- rename(DF, "ADAH" = "Importe por Servicios")
```

```{r eval=TRUE}
DF$ADAH_VER[is.na(DF$ADAH_VER)] <- 0
DF$ADAH_VER[DF$ADAH_VER != 0] <- "Si"
DF$ADAH_VER[DF$ADAH_VER == "0"] <- "No"
DF$ADAH[is.na(DF$ADAH)] <- 0
```

## Uniendo la variable Ingreso Rubro ATENCIÓN EN HORAS EXTRAS (AEHE)

```{r}
AEHE <- filter(ITS, `Rubro Ingreso` == "ATENCIÓN EN HORAS EXTRAS")
AEHE <- filter(AEHE,Año %in% c(2020,2021,2022))
AEHE <- select(AEHE, -'Tipo Ingreso')
AEHE <- select(AEHE, -'Rubro Ingreso')
AEHE <- select(AEHE, -'Periodo')
```

```{r}

DF <- merge(DF, AEHE, by = c("Año","Mes","Aeropuerto","Infraestructura"), all=TRUE)
DF <- rename(DF, "AEHE_VER" = "Importe por Servicios")
#Creación de variable de verificación para reemplazo de N/A's 
```

```{r}
DF <- merge(DF, AEHE, by = c("Año","Mes","Aeropuerto","Infraestructura"), all=TRUE)
DF <- rename(DF, "AEHE" = "Importe por Servicios")
```

```{r eval=TRUE}
DF$AEHE_VER[is.na(DF$AEHE_VER)] <- 0
DF$AEHE_VER[DF$AEHE_VER != 0] <- "Si"
DF$AEHE_VER[DF$AEHE_VER == "0"] <- "No"
DF$AEHE[is.na(DF$AEHE)] <- 0
```

## Uniendo la variable Ingreso Rubro ESTACIONAMIENTO AERONAVES (IREA)

```{r}
IREA <- filter(ITS, `Rubro Ingreso` == "ESTACIONAMIENTO AERONAVES")
IREA <- filter(IREA,Año %in% c(2020,2021,2022))
IREA <- select(IREA, -'Tipo Ingreso')
IREA <- select(IREA, -'Rubro Ingreso')
IREA <- select(IREA, -'Periodo')
```

```{r}

DF <- merge(DF, IREA, by = c("Año","Mes","Aeropuerto","Infraestructura"), all=TRUE)
DF <- rename(DF, "IREA_VER" = "Importe por Servicios")
#Creación de variable de verificación para reemplazo de N/A's 
```

```{r}
DF <- merge(DF, IREA, by = c("Año","Mes","Aeropuerto","Infraestructura"), all=TRUE)
DF <- rename(DF, "IREA" = "Importe por Servicios")
```

```{r eval=TRUE}
DF$IREA_VER[is.na(DF$IREA_VER)] <- 0
DF$IREA_VER[DF$IREA_VER != 0] <- "Si"
DF$IREA_VER[DF$IREA_VER == "0"] <- "No"
DF$IREA[is.na(DF$IREA)] <- 0
```

## Uniendo la variable Ingreso Rubro INGRESOS FINANCIEROS (IRIF)

```{r}
IRIF <- filter(ITS, `Rubro Ingreso` == "INGRESOS FINANCIEROS")
IRIF <- filter(IRIF,Año %in% c(2020,2021,2022))
IRIF <- select(IRIF, -'Tipo Ingreso')
IRIF <- select(IRIF, -'Rubro Ingreso')
IRIF <- select(IRIF, -'Periodo')
```

```{r}

DF <- merge(DF, IRIF, by = c("Año","Mes","Aeropuerto","Infraestructura"), all=TRUE)
DF <- rename(DF, "IRIF_VER" = "Importe por Servicios")
#Creación de variable de verificación para reemplazo de N/A's 
```

```{r}
DF <- merge(DF, IRIF, by = c("Año","Mes","Aeropuerto","Infraestructura"), all=TRUE)
DF <- rename(DF, "IRIF" = "Importe por Servicios")
```

```{r eval=TRUE}
DF$IRIF_VER[is.na(DF$IRIF_VER)] <- 0
DF$IRIF_VER[DF$IRIF_VER != 0] <- "Si"
DF$IRIF_VER[DF$IRIF_VER == "0"] <- "No"
DF$IRIF[is.na(DF$IRIF)] <- 0
```

## Uniendo la variable Ingreso Rubro REEMBOLSOS (IRR)

```{r}
IRR <- filter(ITS, `Rubro Ingreso` == "REEMBOLSOS")
IRR <- filter(IRR,Año %in% c(2020,2021,2022))
IRR <- select(IRR, -'Tipo Ingreso')
IRR <- select(IRR, -'Rubro Ingreso')
IRR <- select(IRR, -'Periodo')

IRR <- filter(IRR, `Importe por Servicios` != 0)
```

```{r}

DF <- merge(DF, IRR, by = c("Año","Mes","Aeropuerto","Infraestructura"), all=TRUE)
DF <- rename(DF, "IRR_VER" = "Importe por Servicios")
#Creación de variable de verificación para reemplazo de N/A's 
```

```{r}
DF <- merge(DF, IRR, by = c("Año","Mes","Aeropuerto","Infraestructura"), all=TRUE)
DF <- rename(DF, "IRR" = "Importe por Servicios")
```

```{r eval=TRUE}
DF$IRR_VER[is.na(DF$IRR_VER)] <- 0
DF$IRR_VER[DF$IRR_VER != 0] <- "Si"
DF$IRR_VER[DF$IRR_VER == "0"] <- "No"
DF$IRR[is.na(DF$IRR)] <- 0
```

## Eliminación de datos

```{r}
# Si es que no tenemos el nombre del aeropuerto o su infraestructura (Siempre debe venir acompañada del nombre), la unidad muestral no podrá entrar al análisis pues por ejemplo si nos dicen cuanto gano un aeropuerto desconocido, esto no nos dirá nada.


DF$Aeropuerto[DF$Aeropuerto == 'No precisa'] <- NA
DF$Infraestructura[DF$Infraestructura == '-'] <- NA

DF <- filter(DF, Infraestructura != is.na("Infraestructura") & Aeropuerto != is.na("Aeropuerto"))

DF %>% mutate("Entidad_Infraestructura" =
                  ifelse(Infraestructura=="ADP", "Aeropuertos del Perú S.A.",
                  ifelse(Infraestructura=="AAP", "Aeropuertos Andinos del Perú S.A.",
                  ifelse(Infraestructura=="COR", "CORPAC S.A.",
                  ifelse(Infraestructura=="LAP", "Lima Airport Partners S.R.L.",Infraestructura))))) -> DF
```

```{r}
sum(complete.cases(DF))
```

## Exportando la base de datos

```{r}
write_csv(DF,"BaseLimpiav2.csv")
```

# Importando la base datos limpia

```{r}

rm(list = ls())
library(readr)
library(plyr)
library(dplyr)
library(plotrix)
library(ggplot2)
library(stringi)
library(MASS)

DF <- read_csv("BaseLimpiav2.csv")

```

# Variables

**Año:** Variable categórica que indica el año de la recolección de información.

**Mes:** Variable categórica que indica el mes de la recolección de información.

**Aeropuerto:** Variable cualitativa que indica el aeropuerto del cual se recolecta la información

**Infraestructura:** Variable cualitativa que indica en acrónimo a que entidad pertenece la infraestructura del aeropuerto del cual se recolecta la información.

**Entidad_Infraestructura:** Variable cualitativa que indica a que entidad pertenece la infraestructura del aeropuerto del cual se recolecta la información.

**NPI:** Variable cuantitativa que representa el numero de pasajeros internacionales que ha registrado el aeropuerto

**NPN:** Variable cuantitativa que representa el numero de pasajeros nacionales que ha registrado el aeropuerto

**IRAD_VER:** Variable categórica que representa si el aeropuerto obtiene ingresos por aterrizaje y despegue.

**IRAD:** Variable cuantitativa que representa el ingreso en dolares del aeropuerto por aterrizaje y despegue.

**AADM_VER:** Variable categórica que representa si el aeropuerto obtiene ingresos por el alquiler de áreas de mantenimiento.

**AADM:** Variable cuantitativa que representa el ingreso en dolares por el alquiler de áreas de mantenimiento.

**ADEP_VER:** Variable categórica que representa si el aeropuerto obtiene ingresos por el alquiler de espacios de publicidad.

**ADEP:** Variable cuantitativa que representa el ingreso en dolares por el alquiler de espacios de publicidad.

**ALC_VER:** Variable categórica que representa si el aeropuerto obtiene ingresos por el alquiler de locales comerciales.

**ALC:** Variable cuantitativa que representa el ingreso en dolares por el alquiler de locales comerciales.

**AOOA_VER:** Variable categórica que representa si el aeropuerto obtiene ingresos por el alquiler de oficinas de operaciones de aerolíneas.

**AOOA:** Variable cuantitativa que representa el ingreso en dolares por el alquiler de oficinas de operaciones de aerolíneas.

**ADAH_VER:** Variable categórica que representa si el aeropuerto obtiene ingresos por el alquiler de almacenes/hangares.

**ADAH:** Variable cuantitativa que representa el ingreso en dolares por el alquiler de almacenes/hangares.

**AEHE_VER:** Variable categórica que representa si el aeropuerto obtiene ingresos por la atención en horas extras.

**AEHE:** Variable cuantitativa que representa el ingreso en dolares por la atención en horas extras.

**IREA_VER:** Variable categórica que representa si el aeropuerto obtiene ingresos por el estacionamiento de aeronaves.

**IREA:** Variable cuantitativa que representa el ingreso en dolares por el estacionamiento de aeronaves.

**IRIF_VER:** Variable categórica que representa si el aeropuerto obtiene ingresos por reembolso en ingresos financieros.

**IRIF:** Variable cuantitativa que representa el ingreso en dolares por reembolso en ingresos financieros.

**IRR_VER:** Variable categórica que representa si el aeropuerto obtiene ingresos por reembolsos.

**IRR:** Variable cuantitativa que representa el ingreso en dolares por reembolsos.

# Descriptores Gráficos

## Numero de Pasajeros vs Ingresos Totales

```{r}
DF %>% mutate(NP = NPN + NPI) -> DF
#Numero de pasajeros totales
```

```{r}
plot(DF$NP/1000, DF$IT/1000000, xlab = "Numero de pasajeros (miles)", ylab = "Ingresos totales (millones de US$)", col="darkgreen", pch="•")

```

Comenzamos comparando el numero de pasajeros en miles totales, suma de pasajeros internacionales y nacionales, con los ingresos totales de cada aeropuerto en determinado mes y año en millones de dolares. A simple vista se puede ver un cierto tipo de relación lineal, sin embargo tenemos que comprobarlo. Usaremos el coeficiente de correlación ya que este no toma en cuenta la escala de las unidades, perfecto para nuestro estudio.

```{r}
cor(DF$IT, DF$NP, use="complete.obs")
```

Con la información suministrada del coeficiente de correlación se deduce que la relación lineal entre el numero de pasajeros y los ingresos totales es bastante buena y ascendente. Es decir los ingresos totales aumentaran en cuanto aumente el numero de pasajeros.

Ahora crearemos un modelo de regresión lineal.

```{r}

d <- data.frame("X"=DF$NP/1000, "Y"=DF$IT/1000000)
modelo = lm(DF$IT ~ DF$NP, data=DF)
modelo
modelo = lm(d$Y ~ d$X, data=d)
modelo
```

```{r}
par(mfrow=c(1,2))

plot(DF$NPN/1000, DF$IT/1000000, xlab = "Numero de pasajeros nacionales (miles)", ylab = "Ingresos totales (millones de US$)", col="red", pch="•")

plot(DF$NPI/1000, DF$IT/1000000, xlab = "Numero de pasajeros internacionales (miles)", ylab = "Ingresos totales (millones de US$)", col="blue", pch="•")
```

```{r}
boxplot(DF$IT/1000000, col="purple", horizontal = TRUE)
```

```{r}
par(mfrow=c(1,2))
boxplot(filter())
```

```{r}

```

```{r}
plot(filter(DF,Aeropuerto == "Lima")$NPN/1000, filter(DF,Aeropuerto == "Lima")$IT/1000000, xlab = "Numero de miles de pasajeros nacionales", ylab = "Ingresos totales en millones de $")
```

```{r}
plot(filter(DF,Aeropuerto != "Lima")$NPN/1000, filter(DF,Aeropuerto != "Lima")$IT/1000000, xlab = "Numero de miles de pasajeros nacionales", ylab = "Ingresos totales en millones de $")
```

```{r}
plot(DF$NPN/1000, DF$IT/1000000, xlab = "Numero de miles de pasajeros nacionales", ylab = "Ingresos totales en millones de $")
```

```{r}

plot(DF$NPI, DF$IT, xlab = "Numero de pasajeros internacionales", ylab = "Ingresos totales")

```

```{r}

plot(group_by(DF, Mes)$NPI/1000, group_by(DF, Mes)$IT/100000, xlab = "Numero de pasajeros internacionales", ylab = "Ingresos totales")
```

```{r}
summary(DF$NPN[DF$IT <= 4000000])
```

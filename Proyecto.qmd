---
title: "Estadisticas sobre los aeropuertos"
author: "Grupo 7, Sección 9"
date: "`r format(Sys.time(), '%d %B, %Y')`"
editor: visual
format: html
output:
  html_notebook:
    toc: yes
    toc_float:
      collapsed: no
      smooth_scroll: no
    number_sections: yes

  html_document:
    toc: yes
    df_print: paged
---

# **Alumnos del grupo:**

| Alumno                          | **Código**    | **Correo**                     | **Porcentaje de Trabajo** |
|-------------------|-----------------|-------------------|-----------------|
| ***Samir Stefano Suarez Rios*** | **202210611** | **samir.suarez\@utec.edu.pe**  | **x%**                    |
| **Milton Esteban Robles Reyes** | **202210416** | **milton.robles\@utec.edu.pe** | **x%**                    |
| **Caballito Hurtado**           | **201610002** | **María.salinas\@utec.edu.pe** | **x%**                    |
| **Chriss Martin de Coldplay**   | **201610002** | **María.salinas\@utec.edu.pe** | **x%**                    |

# **Tema**

Análisis mensual de la relación entre número de pasajeros e ingresos totales por aeropuerto (2020-2022)

# **Objetivo**

Evaluar la influencia del número de pasajeros en los ingresos totales (S/.) por mes y año en cada aeropuerto en el Perú.

## Objetivo Secundarios

-   Comparar los ingresos totales (S/.) durante la pandemia y post pandemia en el Perú.
-   Comparar los ingresos totales (S/.) de los rubros ( ) en los aeropuertos del Perú.
-   Determinar la relación de los Check In y los despegues en los aeropuertos del Perú.

## Tabla de variables

# Librerías

```{r}
library(plyr)
library(dplyr)
library(readr)
rm(list=ls())
```

# Tablas

```{r}
IT <- read_csv("RecaudacionIngresosTotales.csv")
IR <- read_csv("RecaudacionIngresosRegulados.csv")
TP <- read_csv("TraficoPasajeros.csv")
```

# Limpieza de datos

## Creando el dataframe

```{r}
IT %>% mutate(Periodo = as.numeric(Periodo)) %>% full_join(IR, by = c("Año", "Mes","Periodo", "Infraestructura", "Aeropuerto", "Rubro Ingreso", "Importe por Servicios")) %>% full_join(TP, by = c("Año", "Mes","Periodo", "Infraestructura", "Aeropuerto")) ->DFN
co
```

```{r}
# MESES:
m <- c("Enero","Febrero","Marzo","Abril","Mayo","Junio","Julio","Agosto","Setiembre","Octubre","Noviembre","Diciembre")


# AEROPUERTOS:
v <- c("Andahuaylas","Arequipa","Atalaya","Ayacucho","Cajamarca","Chachapoyas","Chiclayo","Chimbote","Cusco","Huánuco","Huaraz-Anta","Ilo","Iquitos","Jaén","Jauja","Juanjui","Juliaca","Lima","Mazamari","Moquegua","Nazca","Pisco","Piura","Pucallpa","Puerto Maldonado","Rioja","Rodríguez de Mendoza","Tacna","Talara","Tarapoto","Tingo","María","Tocache","Trujillo","Tumbes","Yurimaguas")


# CREAMOS 3 DF CON LOS AÑOS (2020,2021,2022):
DF2020 <- data.frame(rep(c(2020), length(v)*length(m)), rep(m,length(v)),rep(v,length(m)))

DF2020 <- rename(DF2020, "Año"="rep.c.2020...length.v....length.m..", "Mes" = "rep.m..length.v..", "Aeropuerto"= "rep.v..length.m.." )
DF2020$Aeropuerto <- sort(DF2020$Aeropuerto)
arrange(DF2020, Aeropuerto)


DF2021 <- data.frame(rep(c(2021), length(v)*length(m)), rep(m,length(v)),rep(v,length(m)))

DF2021 <- rename(DF2021, "Año"="rep.c.2021...length.v....length.m..", "Mes" = "rep.m..length.v..", "Aeropuerto"= "rep.v..length.m.." )
DF2021$Aeropuerto <- sort(DF2021$Aeropuerto)
arrange(DF2021, Aeropuerto)


DF2022 <- data.frame(rep(c(2022), length(v)*length(m)), rep(m,length(v)),rep(v,length(m)))

DF2022 <- rename(DF2022, "Año"="rep.c.2022...length.v....length.m..", "Mes" = "rep.m..length.v..", "Aeropuerto"= "rep.v..length.m.." )
DF2022$Aeropuerto <- sort(DF2022$Aeropuerto)
arrange(DF2022, Aeropuerto)


# COMBINAMOS LOS 3DF EN UN DF COMPLETO:
DF <- merge(DF2020,DF2021, by = c("Año","Mes","Aeropuerto"), all = TRUE)
DF <- merge(DF,DF2022, by = c("Año","Mes","Aeropuerto"), all = TRUE)
DF
```

## Uniendo la variable Numero de Pasajeros Internacionales (NPI)

```{r}
PI <- filter(TP, `Tipo de Pasajero` == "INTERNACIONAL")
PI <- filter(PI,Año %in% c(2020,2021,2022))
PI <- select(PI, -Periodo)
PI <- select(PI, -`Tipo de Pasajero`)
```

```{r}
DF <- merge(DF,PI, by = c("Año","Mes","Aeropuerto"), all = TRUE)
DF <- rename(DF, "NPI" = "Nro Pasajeros")
```

## Uniendo la variable Numero de Pasajeros Naciones (NPN)

```{r}
PN <- filter(TP, `Tipo de Pasajero` == "NACIONAL")
PN <- filter(PN,Año %in% c(2020,2021,2022))
PN <- select(PN, -Periodo)
PN <- select(PN, -`Tipo de Pasajero`)
```

```{r}
DF <- merge(DF,PN, by = c("Año","Mes","Aeropuerto","Infraestructura"), all=TRUE)
DF <- rename(DF, "NPN" = "Nro Pasajeros")
DF <- rename(DF, "Infraestructura" = "Infraestructura.x")
```

## Uniendo la variable Ingreso Rubro Aterrizaje y Despegue (IRAD)

```{r}
IRAD <- filter(IT, `Rubro Ingreso` == "ATERRIZAJE Y DESPEGUE")
IRAD <- filter(IRAD,Año %in% c(2020,2021,2022))
IRAD <- select(IRAD, -'Tipo Ingreso')
IRAD <- select(IRAD, -'Rubro Ingreso')
IRAD <- select(IRAD, -'Periodo')
```

```{r}
DF <- merge(DF, IRAD, by = c("Año","Mes","Aeropuerto","Infraestructura"), all=TRUE)
DF <- rename(DF, "IRAD_VER" = "Importe por Servicios")
```

```{r}
DF <- merge(DF, IRAD, by = c("Año","Mes","Aeropuerto","Infraestructura"), all=TRUE)
DF <- rename(DF, "IRAD" = "Importe por Servicios")
```

## Eliminación de datos

```{r}
# Si es que no tenemos el nombre del aeropuerto o su infraestructura (Siempre debe venir acompañada del nombre), la unidad muestral no podrá entrar al análisis pues por ejemplo si nos dicen cuanto gano un aeropuerto desconocido, esto no nos dirá nada.

DF <- filter(DF, Infraestructura != is.na("Infraestructura") & Aeropuerto != is.na("Aeropuerto"))
```

```{r}
PDE <- filter(IT, `Rubro Ingreso` == "ALQUILERES DE ALMACEN/HANGAR")
PDE <- filter(PDE,Año %in% c(2020,2021,2022))
PDE <- select(PDE, -'Tipo Ingreso')
PDE <- select(PDE, -'Rubro Ingreso')
PDE <- select(PDE, -'Periodo')
```

```{r}
DF <- merge(DF, PDE, by = c("Año","Mes","Aeropuerto","Infraestructura"), all=TRUE)
DF <- rename(DF, "123" = "Importe por Servicios")
DF <- select(DF, Año:NPN)
```

```{r}
table(IT$`Rubro Ingreso`)
filter(PDE, Año >= 2020)
sum(complete.cases(DF))
```

```{r}
DF$NPI[is.na(DF$NPI)] <- 0
DF$NPN[is.na(DF$NPN)] <- 0
DF$IRADI[is.na(DF$IRADI)] <- 0
DF$IRADI[DF$IRADI >= 1] <- "Si"
DF$IRADI[DF$IRADI == "0"] <- "No"
DF$IRAD[is.na(DF$IRAD)] <- 0
```

```         
git config --global user.email "you@example.com"
  git config --global user.name "Your Name"
```
